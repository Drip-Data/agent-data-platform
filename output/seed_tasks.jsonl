{"task_id": "seed_reasoning_59d011bb", "task_type": "reasoning", "description": "实现一个Python函数来执行快速排序算法，并在microsandbox环境中进行性能基准测试。该任务需要编写和执行Python代码，并利用沙箱环境进行性能评估，以验证算法的效率。", "expected_tools": ["python_executor"], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751084855_6031a49a-3b1e-45a3-8113-c04c4c2f6d0f", "source_trajectory": "6031a49a-3b1e-45a3-8113-c04c4c2f6d0f", "extracted_at": "2025-06-28T12:27:35.205598"}
{"task_id": "seed_reasoning_14e71770", "task_type": "reasoning", "description": "实现一个Python函数来执行快速排序算法，并在microsandbox环境中进行性能基准测试，以验证其效率。", "expected_tools": ["python_executor"], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751085439_16f45716-cd6e-4d1b-89c9-af98a13e6872", "source_trajectory": "16f45716-cd6e-4d1b-89c9-af98a13e6872", "extracted_at": "2025-06-28T12:37:19.589007"}
{"task_id": "seed_reasoning_ede2b31d", "task_type": "reasoning", "description": "实现一个Python函数来执行冒泡排序算法，并在microsandbox环境中进行测试和验证。该任务需要编写和执行代码，以确保算法的正确性。", "expected_tools": ["python_executor"], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751166413_e68b7aa5-230b-442d-8498-aa4345ebf12a", "source_trajectory": "e68b7aa5-230b-442d-8498-aa4345ebf12a", "extracted_at": "2025-06-29T11:06:53.741017"}
{"task_id": "seed_reasoning_26d50cc0", "task_type": "reasoning", "description": "实现一个高效的Python快速排序函数，并提供一个包含多个测试用例的集成测试集，在隔离环境中验证其正确性和性能。", "expected_tools": ["python_executor"], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751188060_7c243f41-e832-47f7-bf07-9a3e8ea507ca", "source_trajectory": "7c243f41-e832-47f7-bf07-9a3e8ea507ca", "extracted_at": "2025-06-29T17:07:40.328162"}
{"task_id": "seed_reasoning_641976d5", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并包含一个测试集进行验证。该任务需要准确的算法逻辑和代码实现，以确保功能的正确性。", "expected_tools": [], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.9, "source_essence_id": "essence_1751188234_3f4190e0-7569-42e1-bc05-78644f6e1df2", "source_trajectory": "3f4190e0-7569-42e1-bc05-78644f6e1df2", "extracted_at": "2025-06-29T17:10:34.834624"}
{"task_id": "seed_reasoning_9d4329fd", "task_type": "reasoning", "description": "创建一个Python函数，实现一个二叉树算法，并提供一个包含测试用例的测试集来验证函数的正确性。此任务需要编写和执行代码，并进行单元测试。", "expected_tools": [], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751188537_3b827a35-1c8a-46ea-af7e-96df9bb3581e", "source_trajectory": "3b827a35-1c8a-46ea-af7e-96df9bb3581e", "extracted_at": "2025-06-29T17:15:37.324535"}
{"task_id": "seed_reasoning_d3805e9b", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并包含一个测试集进行验证。该任务需要编写和测试代码，确保算法的正确性和鲁棒性。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.9, "source_essence_id": "essence_1751189849_be4d4377-e645-44ae-970e-45690c0af94a", "source_trajectory": "be4d4377-e645-44ae-970e-45690c0af94a", "extracted_at": "2025-06-29T17:37:29.171325"}
{"task_id": "seed_reasoning_69bda01b", "task_type": "reasoning", "description": "创建一个Python函数，实现一个二叉树算法，并提供一个包含测试用例的测试集来验证其正确性。此任务需要编程能力和算法理解。", "expected_tools": [], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751191013_8aa8c862-1716-4337-99c2-89d527e6a405", "source_trajectory": "8aa8c862-1716-4337-99c2-89d527e6a405", "extracted_at": "2025-06-29T17:56:53.715896"}
{"task_id": "seed_reasoning_cc8dca0e", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并提供两个测试用例进行验证。该任务需要编写清晰、可运行的代码，并确保算法的正确性。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.9, "source_essence_id": "essence_1751191440_fee804bd-8913-472e-9d68-3d99c250c717", "source_trajectory": "fee804bd-8913-472e-9d68-3d99c250c717", "extracted_at": "2025-06-29T18:04:00.375998"}
{"task_id": "seed_reasoning_47de4ee3", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并提供两个测试用例进行验证。该任务侧重于算法的正确性和代码的健壮性。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751191441_3413d197-83b8-484f-8efd-48a9b075119f", "source_trajectory": "3413d197-83b8-484f-8efd-48a9b075119f", "extracted_at": "2025-06-29T18:04:01.589591"}
{"task_id": "seed_reasoning_f4327a88", "task_type": "reasoning", "description": "编写一个Python函数，用于计算斐波那契数列的第n项，并提供相应的测试用例以验证其正确性。该任务侧重于算法实现和基础代码测试。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751192616_test-simple-runtime", "source_trajectory": "test-simple-runtime", "extracted_at": "2025-06-29T18:23:36.028620"}
{"task_id": "seed_reasoning_9f1af2bc", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并提供两个测试用例进行验证。该任务侧重于算法的准确性和代码的健壮性。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751193461_e8c12449-4f9d-409b-b273-8127acc63805", "source_trajectory": "e8c12449-4f9d-409b-b273-8127acc63805", "extracted_at": "2025-06-29T18:37:41.528684"}
{"task_id": "seed_reasoning_048685a4", "task_type": "reasoning", "description": "使用Python实现快速排序算法，并编写单元测试用例验证其在不同场景下的正确性，确保算法的健壮性和效率。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751193462_test-xml-1", "source_trajectory": "test-xml-1", "extracted_at": "2025-06-29T18:37:42.670311"}
{"task_id": "seed_reasoning_9fdf1675", "task_type": "reasoning", "description": "研究Python装饰器的概念和用法，并动手实现一个简单的计时装饰器示例，以加深对装饰器工作原理的理解。", "expected_tools": [], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751193464_test-xml-2", "source_trajectory": "test-xml-2", "extracted_at": "2025-06-29T18:37:44.121483"}
{"task_id": "seed_reasoning_70f509d7", "task_type": "reasoning", "description": "实现一个支持加、减、乘、除四则运算的计算器类，并编写单元测试以验证每个运算功能的正确性。", "expected_tools": [], "max_steps": 15, "domain": "algorithm", "complexity": "medium", "confidence": 0.95, "source_essence_id": "essence_1751193465_test-xml-3", "source_trajectory": "test-xml-3", "extracted_at": "2025-06-29T18:37:45.536584"}
{"task_id": "seed_reasoning_e162d04d", "task_type": "reasoning", "description": "实现一个二叉树算法的Python函数，并提供两个测试用例进行验证。该任务侧重于算法的准确实现和功能测试，需要编写和执行Python代码。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751193466_8b33bc46-3d6a-4007-bf6e-5d221e0401a3", "source_trajectory": "8b33bc46-3d6a-4007-bf6e-5d221e0401a3", "extracted_at": "2025-06-29T18:37:46.869703"}
{"task_id": "seed_reasoning_8dca09e8", "task_type": "reasoning", "description": "查询毛泽东所属国家的领导人身份，并提供相关信息，以获取历史和政治知识。", "expected_tools": [], "max_steps": 10, "domain": "research", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751193468_c98f36d1-8b9e-41ff-b162-9e1d83922adc", "source_trajectory": "c98f36d1-8b9e-41ff-b162-9e1d83922adc", "extracted_at": "2025-06-29T18:37:48.118603"}
{"task_id": "seed_reasoning_7517a49c", "task_type": "reasoning", "description": "查询周恩来所属国家，以获取其作为国家领导人的基本信息。此任务旨在进行基础的知识获取和教育性信息查询。", "expected_tools": [], "max_steps": 10, "domain": "research", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751194071_8fb6a92c-6f2f-4f54-bb5e-bbb0208356a5", "source_trajectory": "8fb6a92c-6f2f-4f54-bb5e-bbb0208356a5", "extracted_at": "2025-06-29T18:47:51.753946"}
{"task_id": "seed_reasoning_0e503411", "task_type": "reasoning", "description": "构建一个满足特定条件的19次多项式p(x)，该多项式在复数域C[x]中，且方程p(x)=p(y)在P^1 x P^1上的解集X至少有三个不可约分量（非线性）。多项式需为奇函数、首一、实系数，且线性系数为-19。最后计算p(19)。", "expected_tools": [], "max_steps": 20, "domain": "algorithm", "complexity": "complex", "confidence": 0.95, "source_essence_id": "essence_1751194374_a5069529-ade0-41db-9a0d-79496bc5e8c5", "source_trajectory": "a5069529-ade0-41db-9a0d-79496bc5e8c5", "extracted_at": "2025-06-29T18:52:54.431873"}
{"task_id": "seed_reasoning_1486f160", "task_type": "reasoning", "description": "构造一个满足特定条件的19次不可约多项式p(x)，要求p(x)在复数域C[x]上是奇函数、首一、实系数且线性系数为-19。该多项式需使得集合{p(x) = p(y)}在P^1 x P^1上至少有三个（非线性）不可约分量。最后，计算p(19)。", "expected_tools": [], "max_steps": 20, "domain": "algorithm", "complexity": "complex", "confidence": 0.95, "source_essence_id": "essence_1751194375_fadb7286-7098-4ae1-a78b-bfe4c5bdd88b", "source_trajectory": "fadb7286-7098-4ae1-a78b-bfe4c5bdd88b", "extracted_at": "2025-06-29T18:52:55.942997"}
{"task_id": "seed_reasoning_24a85e8c", "task_type": "reasoning", "description": "构造一个满足特定条件的19次多项式p(x)，要求其在P^1 x P^1上的零点集X := {p(x) = p(y)}至少有3个不可约分量，且p(x)为奇函数、首一、实系数、线性系数为-19。最终计算p(19)。此任务需要结合代数几何理论和Python编程进行计算。", "expected_tools": [], "max_steps": 20, "domain": "algorithm", "complexity": "complex", "confidence": 0.95, "source_essence_id": "essence_1751195325_math-polynomial-high-tokens-test", "source_trajectory": "math-polynomial-high-tokens-test", "extracted_at": "2025-06-29T19:08:45.596182"}
{"task_id": "seed_reasoning_5ba3e4d1", "task_type": "reasoning", "description": "使用Python计算多项式 p(x) = x^19 - 19x 在 x=19 时的值。任务要求先通过Python验证2+2=4，然后直接进行数值计算，避免理论分析。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751195327_direct-tool-usage-test", "source_trajectory": "direct-tool-usage-test", "extracted_at": "2025-06-29T19:08:47.032540"}
{"task_id": "seed_reasoning_5b55b28a", "task_type": "reasoning", "description": "构建一个满足特定条件的19次多项式p(x)，要求其在复数域C[x]上，且方程p(x)=p(y)在P^1 x P^1上的解集X至少有3个不可约分量（非线性）。多项式需为奇函数、首一、实系数，且线性系数为-19。最后计算p(19)。此任务涉及抽象代数、代数几何和数值计算。", "expected_tools": [], "max_steps": 20, "domain": "algorithm", "complexity": "complex", "confidence": 0.95, "source_essence_id": "essence_1751195629_694e2a2e-4923-46fb-b393-df06a3f36d38", "source_trajectory": "694e2a2e-4923-46fb-b393-df06a3f36d38", "extracted_at": "2025-06-29T19:13:49.845145"}
{"task_id": "seed_reasoning_88125f4f", "task_type": "reasoning", "description": "使用Python实现冒泡排序算法，并提供三个不同的测试数据集来验证其正确性和效率。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751195631_7dc23658-aa09-48e2-b35d-0ebecb64892a", "source_trajectory": "7dc23658-aa09-48e2-b35d-0ebecb64892a", "extracted_at": "2025-06-29T19:13:51.006179"}
{"task_id": "seed_reasoning_dec14277", "task_type": "reasoning", "description": "使用Python实现一个深度搜索树（Depth-First Search Tree）的示例代码，并提供三个不同的测试数据集来验证其功能和正确性。", "expected_tools": [], "max_steps": 10, "domain": "algorithm", "complexity": "simple", "confidence": 0.95, "source_essence_id": "essence_1751198267_87fd3e78-f64c-4df2-b085-89d6f6d29939", "source_trajectory": "87fd3e78-f64c-4df2-b085-89d6f6d29939", "extracted_at": "2025-06-29T19:57:47.014159"}
