#!/usr/bin/env python3
"""
LLM客户端统一接口
支持多种API提供商：vLLM本地服务、OpenAI、Google Gemini、DeepSeek等
"""

import os
import json
import logging
from typing import Dict, Any, Optional, List
from enum import Enum
import httpx
import asyncio

logger = logging.getLogger(__name__)

class LLMProvider(Enum):
    """LLM提供商枚举"""
    VLLM = "vllm"
    OPENAI = "openai"
    GEMINI = "gemini"
    DEEPSEEK = "deepseek"

class LLMClient:
    """统一的LLM客户端"""
    
    def __init__(self, config: Dict[str, Any]):
        self.config = config
        # 优先使用配置中指定的提供商，没有则进行自动检测
        if 'provider' in config:
            provider_name = config['provider'].lower()
            if provider_name == 'vllm':
                self.provider = LLMProvider.VLLM
            elif provider_name == 'openai':
                self.provider = LLMProvider.OPENAI
            elif provider_name == 'gemini':
                self.provider = LLMProvider.GEMINI
            elif provider_name == 'deepseek':
                self.provider = LLMProvider.DEEPSEEK
            else:
                logger.warning(f"Unknown provider in config: {provider_name}, falling back to auto-detection")
                self.provider = self._detect_provider()
        else:
            self.provider = self._detect_provider()
            
        self.client = httpx.AsyncClient(timeout=60.0)
        
        logger.info(f"Initialized LLM client with provider: {self.provider.value}")
    
    def _detect_provider(self) -> LLMProvider:
        """自动检测使用的LLM提供商"""
        # 优先级：Gemini > DeepSeek > OpenAI > vLLM
        if os.getenv('GEMINI_API_KEY'):
            return LLMProvider.GEMINI
        elif os.getenv('DEEPSEEK_API_KEY'):
            return LLMProvider.DEEPSEEK
        elif os.getenv('OPENAI_API_KEY'):
            return LLMProvider.OPENAI
        else:
            return LLMProvider.VLLM
    
    async def generate_code(self, description: str, language: str = "python") -> Dict[str, str]:
        """生成代码，并返回思考过程和代码"""
        disable_cache = os.getenv("DISABLE_CACHE") or self.config.get("disable_cache", False)
        logger.debug(f"LLMClient.generate_code called: disable_cache={disable_cache}, description={description[:50]}")
        prompt = self._build_code_prompt(description, language)
        
        try:
            response = await self._call_api(prompt)
            code = self._extract_code(response, language)
            # 保存原始思考过程
            thinking = response
            if len(thinking) > 2000:  # 如果思考过程太长，截取前后部分
                thinking = thinking[:1000] + "\n... (内容过长，已截断) ...\n" + thinking[-1000:]
            
            return {
                "code": code,
                "thinking": thinking,
                "success": True
            }
        except Exception as e:
            logger.error(f"Failed to generate code: {e}")
            # 不再使用备用模板，而是直接报告错误
            raise RuntimeError(f"无法生成代码: {e}") from e
    
    async def generate_web_actions(self, description: str, page_content: str = "") -> List[Dict]:
        """生成Web操作步骤"""
        prompt = self._build_web_prompt(description, page_content)
        
        try:
            response = await self._call_api(prompt)
            actions = self._extract_web_actions(response)
            return actions
        except Exception as e:
            logger.error(f"Failed to generate web actions: {e}")
            return self._fallback_web_actions(description)
    
    async def generate_reasoning(self, task_description: str, available_tools: List[str],
                                previous_steps: List[Dict] = None,
                                browser_context: Optional[Dict[str, Any]] = None) -> Dict[str, Any]:
        """生成推理步骤和工具调用"""
        prompt = self._build_reasoning_prompt(task_description, available_tools, previous_steps, browser_context)
        
        try:
            response = await self._call_api(prompt)
            return self._parse_reasoning_response(response)
        except Exception as e:
            logger.error(f"Failed to generate reasoning: {e}")
            return {
                "thinking": f"Error occurred while processing: {e}",
                "action": "error",
                "tool": None,
                "parameters": {},
                "confidence": 0.0
            }
    
    async def generate_enhanced_reasoning(self, task_description: str, available_tools: List[str],
                                         tool_descriptions: str,
                                         previous_steps: List[Dict] = None,
                                         execution_context: Optional[Dict[str, Any]] = None) -> Dict[str, Any]:
        """生成增强推理步骤和工具调用 - 使用丰富的工具描述和执行上下文"""
        prompt = self._build_enhanced_reasoning_prompt(
            task_description, available_tools, tool_descriptions, previous_steps, execution_context
        )
        
        try:
            response = await self._call_api(prompt)
            return self._parse_reasoning_response(response)
        except Exception as e:
            logger.error(f"Failed to generate enhanced reasoning: {e}")
            return {
                "thinking": f"Error occurred while processing: {e}",
                "action": "error",
                "tool": None,
                "parameters": {},
                "confidence": 0.0
            }
    
    async def generate_task_summary(self, task_description: str, steps: List[Dict], 
                                   final_outputs: List[str]) -> str:
        """生成任务执行总结"""
        prompt = self._build_summary_prompt(task_description, steps, final_outputs)
        
        try:
            response = await self._call_api(prompt)
            return response.strip()
        except Exception as e:
            logger.error(f"Failed to generate summary: {e}")
            return f"Task completed with {len(steps)} steps. Final outputs: {'; '.join(final_outputs[:3])}"
    
    async def check_task_completion(self, task_description: str, steps: List[Dict], 
                                   current_outputs: List[str]) -> Dict[str, Any]:
        """检查任务是否完成"""
        prompt = self._build_completion_check_prompt(task_description, steps, current_outputs)
        
        try:
            response = await self._call_api(prompt)
            return self._parse_completion_response(response)
        except Exception as e:
            logger.error(f"Failed to check completion: {e}")
            return {"completed": False, "confidence": 0.0, "reason": f"Error: {e}"}

    async def _call_api(self, prompt: str) -> str:
        """调用相应的API"""
        if self.provider == LLMProvider.VLLM:
            return await self._call_vllm(prompt)
        elif self.provider == LLMProvider.OPENAI:
            return await self._call_openai(prompt)
        elif self.provider == LLMProvider.GEMINI:
            return await self._call_gemini(prompt)
        elif self.provider == LLMProvider.DEEPSEEK:
            return await self._call_deepseek(prompt)
        else:
            raise ValueError(f"Unsupported provider: {self.provider}")
    
    async def _call_vllm(self, prompt: str) -> str:
        """调用vLLM本地服务"""
        vllm_url = self.config.get("vllm_url", "http://localhost:8000")
        
        payload = {
            "model": "default",
            "messages": [
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 1024,
            "temperature": 0.1
        }
        
        response = await self.client.post(
            f"{vllm_url}/v1/chat/completions",
            json=payload
        )
        response.raise_for_status()
        
        result = response.json()
        return result["choices"][0]["message"]["content"]
    
    async def _call_openai(self, prompt: str) -> str:
        """调用OpenAI API"""
        api_key = os.getenv('OPENAI_API_KEY')
        api_base = os.getenv('OPENAI_API_BASE', 'https://api.openai.com/v1')
        
        payload = {
            "model": "gpt-3.5-turbo",
            "messages": [
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 1024,
            "temperature": 0.1
        }
        
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        
        response = await self.client.post(
            f"{api_base}/chat/completions",
            json=payload,
            headers=headers
        )
        response.raise_for_status()
        
        result = response.json()
        return result["choices"][0]["message"]["content"]
    
    async def _call_gemini(self, prompt: str) -> str:
        """调用Google Gemini API"""
        api_key = os.getenv('GEMINI_API_KEY')
        api_url = os.getenv('GEMINI_API_URL', 'https://generativelanguage.googleapis.com/v1beta')
        
        # 验证并使用有效的Gemini模型名称
        model_name = os.getenv('GEMINI_MODEL', 'gemini-2.5-flash-preview-05-20')  # 更新默认模型
        valid_models = [
            'gemini-2.5-flash-preview-05-20',  # 添加新的预览模型
            'gemini-2.0-flash', 'gemini-2.0-pro', 
            'gemini-1.0-pro', 'gemini-pro'
        ]
        
        if model_name not in valid_models:
            logger.warning(f"Invalid Gemini model '{model_name}', using default 'gemini-2.5-flash-preview-05-20'")
            model_name = 'gemini-2.5-flash-preview-05-20'
        
        payload = {
            "contents": [
                {
                    "parts": [
                        {"text": prompt}
                    ]
                }
            ],
            "generationConfig": {
                "temperature": 0.1,
                "maxOutputTokens": 1024
            }
        }
        
        try:
            response = await self.client.post(
                f"{api_url}/models/{model_name}:generateContent?key={api_key}",
                json=payload
            )
            response.raise_for_status()
            
            result = response.json()
            
            # 检查响应格式
            if "candidates" not in result:
                raise ValueError(f"Invalid Gemini response format: missing 'candidates' field")
            
            if not result["candidates"]:
                raise ValueError(f"Empty candidates in Gemini response")
                
            candidate = result["candidates"][0]
            if "content" not in candidate:
                raise ValueError(f"Invalid candidate format: missing 'content' field")
                
            content = candidate["content"]
            if "parts" not in content:
                raise ValueError(f"Invalid content format: missing 'parts' field")
                
            if not content["parts"]:
                raise ValueError(f"Empty parts in content")
                
            part = content["parts"][0]
            if "text" not in part:
                raise ValueError(f"Invalid part format: missing 'text' field")
                
            return part["text"]
            
        except Exception as e:
            logger.error(f"Gemini API call failed: {e}")
            # 如果使用了不稳定的模型，尝试回退到稳定版本
            if model_name != 'gemini-1.5-flash':
                logger.info("Retrying with stable model 'gemini-1.5-flash'")
                try:
                    response = await self.client.post(
                        f"{api_url}/models/gemini-1.5-flash:generateContent?key={api_key}",
                        json=payload
                    )
                    response.raise_for_status()
                    result = response.json()
                    
                    # 同样的格式检查
                    if ("candidates" in result and result["candidates"] and 
                        "content" in result["candidates"][0] and
                        "parts" in result["candidates"][0]["content"] and
                        result["candidates"][0]["content"]["parts"] and
                        "text" in result["candidates"][0]["content"]["parts"][0]):
                        return result["candidates"][0]["content"]["parts"][0]["text"]
                    else:
                        raise ValueError(f"Invalid fallback response format")
                        
                except Exception as fallback_e:
                    logger.error(f"Fallback model also failed: {fallback_e}")
                    raise e  # 抛出原始错误
            else:
                raise
    
    async def _call_deepseek(self, prompt: str) -> str:
        """调用DeepSeek API"""
        api_key = os.getenv('DEEPSEEK_API_KEY')
        api_url = os.getenv('DEEPSEEK_API_URL', 'https://api.deepseek.com/v1')
        
        payload = {
            "model": "deepseek-coder",
            "messages": [
                {"role": "user", "content": prompt}
            ],
            "max_tokens": 1024,
            "temperature": 0.1
        }
        
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        
        response = await self.client.post(
            f"{api_url}/chat/completions",
            json=payload,
            headers=headers
        )
        response.raise_for_status()
        
        result = response.json()
        return result["choices"][0]["message"]["content"]
    
    def _build_code_prompt(self, description: str, language: str) -> str:
        """构建代码生成提示，增强思考过程捕获"""
        return f"""请根据以下描述生成{language}代码。

首先，详细思考如何解决这个问题，包括可能的算法、数据结构以及实现步骤。
在你的思考过程中，分析不同的解决方案并选择最佳方案。

描述：{description}

要求：
1. 先详细描述你的思考过程，包括你考虑的不同方法
2. 代码应该完整且可执行
3. 包含必要的注释
4. 处理可能的异常情况
5. 输出结果到控制台

==== 思考过程 ====
(请在这里详细写出你的思考过程，包括算法选择、数据结构、实现思路等)

==== 代码实现 ====
(在此处生成最终代码)
"""
    
    def _build_web_prompt(self, description: str, page_content: str) -> str:
        """构建Web操作提示"""
        return f"""请根据以下描述生成Web操作步骤：

任务描述：{description}

当前页面内容：
{page_content[:1000] if page_content else '无'}

请返回JSON格式的操作步骤列表，每个步骤包含：
- action: 操作类型（navigate, click, fill, wait等）
- selector: CSS选择器（如果需要）
- value: 输入值（如果需要）
- description: 操作描述

示例格式：
[
  {{"action": "navigate", "url": "https://example.com", "description": "打开网站"}},
  {{"action": "fill", "selector": "#search", "value": "搜索内容", "description": "填写搜索框"}},
  {{"action": "click", "selector": "button[type=submit]", "description": "点击搜索按钮"}}
]

请只返回JSON数组，不要包含其他文字："""
    
    def _build_reasoning_prompt(self, task_description: str, available_tools: List[str],
                                previous_steps: List[Dict] = None,
                                browser_context: Optional[Dict[str, Any]] = None) -> str:
        """构建推理提示"""
        tool_descriptions = []
        for tool_name in available_tools:
            # 强制使用严格的工具调用格式和示例，详见 docs/AGENT_IMPROVEMENT_PLAN.md
            logger.debug("构建推理提示：应用严格的工具使用规则和示例")
            if tool_name == 'browser':
                browser_desc = (
                    f"- browser: 用于与网页交互的工具。支持以下主要 ACTION:\n"
                    f"    - `browser_navigate`: 导航到指定URL。PARAMETERS: `{{ \"url\": \"<完整的HTTP/HTTPS URL>\" }}`\n"
                    f"    - `browser_get_text`: 提取页面文本。PARAMETERS: `{{ \"selector\": \"<CSS选择器(可选)>\" }}` (若无selector，则提取body文本)\n"
                    f"    - `browser_click`: 点击指定元素。PARAMETERS: `{{ \"selector\": \"<CSS选择器>\" }}`\n"
                    f"    (更多操作如 browser_fill_form, browser_extract_links 等请参考工具文档，并确保 PARAMETERS 格式正确)"
                )
                tool_descriptions.append(browser_desc)
            elif tool_name == 'python_executor':
                python_desc = (
                    f"- python_executor: 用于执行Python代码。主要 ACTION:\n"
                    f"    - `python_execute`: 执行Python代码。PARAMETERS: `{{ \"code\": \"<Python代码字符串>\" }}`"
                )
                tool_descriptions.append(python_desc)
            else:
                tool_descriptions.append(f"- {tool_name}")
        tools_desc = "\n".join(tool_descriptions)
        
        browser_context_str = ""
        if browser_context:
            bc = browser_context # shortcut
            # Ensuring consistent indentation for the f-string block
            browser_context_str = (
                f"\n\n当前浏览器状态:\n"
                f"- 当前URL: {bc.get('current_url', 'N/A')}\n"
                f"- 页面标题: {bc.get('current_page_title', 'N/A')}\n"
                f"- 最近导航历史:\n  {bc.get('recent_navigation_summary', '无导航历史').replace(chr(10), chr(10) + '  ')}\n" # Indent multi-line summary
                f"- 上次提取文本片段: {bc.get('last_text_snippet', '无')}\n"
                f"- 当前页面链接摘要: {bc.get('links_on_page_summary', '无')}"
            )

        previous_steps_str = ""
        if previous_steps:
            previous_steps_str = "\n\n之前的执行步骤:\n"
            for i, step in enumerate(previous_steps[-3:], 1):  # 只显示最近3步
                action_str = step.get('action', step.get('action_type', 'unknown_action'))
                observation_str = str(step.get('observation', ''))[:200]
                previous_steps_str += f"  {i}. Action: {action_str}, Observation: {observation_str}...\n"

        # The f-string for prompt_template starts here.
        # All lines of the f-string content should be at least at this indentation level or further indented.
        logger.debug("Applying strict tool usage rules from AGENT_IMPROVEMENT_PLAN.md")
        prompt_template = f"""你是一个智能推理助手，需要逐步解决用户的任务。
你的目标是准确、高效地完成任务，并清晰地展示你的决策过程。

任务描述: {task_description}

可用工具:
{tools_desc}
{browser_context_str}
{previous_steps_str}
请分析当前情况（包括任务描述、可用工具、浏览器状态和之前的步骤），输出你的思考过程和下一步行动。格式如下:

THINKING:
[在这里详细描述你的思考过程。分析任务需求，回顾之前的步骤和观察结果（如果有），评估当前状态，并解释你为什么选择下一步的行动和工具。如果之前的步骤失败，请分析失败原因并说明你将如何调整策略。]

ACTION: [选择一个行动类型。可用行动包括: browser_navigate, browser_click, browser_get_text, python_execute, python_analyze, python_visualize, complete_task, error]

TOOL: [如果你选择的ACTION需要工具，请指定使用的具体工具名称，例如：browser, python_executor。如果ACTION是 complete_task 或 error，则TOOL应为 None 或留空。]

PARAMETERS:
[提供一个JSON对象格式的工具参数。严格遵守以下规则：
1.  **对于 `browser_navigate` ACTION**:
    -   `PARAMETERS` 必须是 `{{ \"url\": \"<完整的、有效的HTTP或HTTPS URL>\" }}` 的格式。
    -   示例: `{{ \"url\": \"https://www.google.com\" }}`
2.  **对于 `browser_click` ACTION**:
    -   `PARAMETERS` 必须是 `{{ \"selector\": \"<CSS选择器>\" }}` 的格式。
    -   示例: `{{ \"selector\": \"button#submit\" }}`
3.  **对于 `browser_get_text` ACTION**:
    -   `PARAMETERS` 可以是 `{{ \"selector\": \"<CSS选择器>\" }}` (提取特定元素文本) 或 `{{}}` (提取整个body文本)。
    -   示例: `{{ \"selector\": \"div.article-content\" }}` 或 `{{}}`
4.  **对于 `python_execute` ACTION**:
    -   `PARAMETERS` 必须是 `{{ \"code\": \"<Python代码字符串>\" }}`。
5.  **对于其他 ACTION**: 请根据工具的具体需求提供参数。
6.  **如果ACTION是 `complete_task` 或 `error`**: `PARAMETERS` 应为 `{{}}`。
7.  **绝对禁止使用 `{{\"raw\": ...}}` 作为 `PARAMETERS` 的主要结构。所有参数都应该有明确的键名。**
8.  在生成参数前，请在THINKING中确认所有必需的参数值（尤其是URL）已经从任务描述、之前的步骤或你的分析中获取。如果缺少关键参数，你的ACTION应该是error，并在THINKING中说明原因。
]

CONFIDENCE: [提供一个0.0到1.0之间的小数，表示你对当前决策能够成功推进任务的信心。]

请确保你的输出严格遵循上述格式的每一部分。
"""
        return prompt_template # This return must be at the same indentation level as the start of the method body.
    
    def _build_enhanced_reasoning_prompt(self, task_description: str, available_tools: List[str],
                                        tool_descriptions: str, previous_steps: List[Dict] = None,
                                        execution_context: Optional[Dict[str, Any]] = None) -> str:
        """为增强推理构建详细的提示"""

        # System-level instruction
        prompt_parts = [
            "You are a highly intelligent AI agent with dynamic tool capabilities.",
            "You can analyze task requirements and proactively search for new tools when needed.",
            "You MUST respond with a single, valid JSON object and nothing else.",
        ]
        
        # 1. 任务定义
        prompt_parts.extend([
            "\n## Overall Task",
            "Your main goal is: " + task_description,
        ])

        # 2. 可用工具 - 特别强调MCP搜索工具
        prompt_parts.extend([
            "\n## Available Tools",
            "You have the following tools. Choose the most appropriate one for your next action:",
            tool_descriptions,
            "\n**Special Note about MCP Search Tool:**",
            "- Use 'mcp-search-tool' with action 'analyze_tool_needs' to check if current tools are sufficient",
            "- Use 'mcp-search-tool' with action 'search_and_install_tools' to find and install new tools when needed",
            "- This allows you to expand your capabilities dynamically based on task requirements"
        ])

        # 3. 当前上下文
        if execution_context and execution_context.get("browser_state"):
            browser_state = execution_context["browser_state"]
            context_str = (
                f"- Current URL: {browser_state.get('url')}\n"
                f"- Page Title: {browser_state.get('title')}\n"
                f"- Page Content Summary: {browser_state.get('content_summary')}"
            )
            prompt_parts.extend([
                "\n## Current Situation",
                "This is your current state. Use this to decide your next step.",
                context_str
            ])
            
        # 4. 历史记录
        if previous_steps:
            # Format history to be more concise and clear
            history_lines = []
            
            # 分析历史步骤，检测循环和推荐行动
            analyze_tool_needs_count = 0
            search_and_install_count = 0
            last_recommended_action = None
            
            for s in previous_steps:
                # 统计MCP工具的使用情况
                if s.get('tool_id') == 'mcp-search-tool':
                    if s.get('action') == 'analyze_tool_needs':
                        analyze_tool_needs_count += 1
                    elif s.get('action') == 'search_and_install_tools':
                        search_and_install_count += 1
                    
                    # 从观察中提取推荐行动
                    observation = s.get('observation', '')
                    if 'search_for_new_tools' in observation:
                        last_recommended_action = 'search_for_new_tools'
                
                tool_call_str = f"Tool call: {s.get('tool_id', 'N/A')}.{s.get('action', 'N/A')}({s.get('parameters', {})})"
                observation_str = f"Observation: {s.get('observation', 'No observation.')}"
                
                # 特别标注MCP工具的使用结果
                if s.get('tool_id') == 'mcp-search-tool':
                    if 'success' in str(s.get('observation', '')).lower():
                        observation_str += " ✅ (MCP tool operation completed)"
                        # 解析推荐行动
                        if 'recommended_action' in observation_str and 'search_for_new_tools' in observation_str:
                            observation_str += " 🔍 **RECOMMENDS: search_for_new_tools**"
                    else:
                        observation_str += " ⚠️ (MCP tool operation had issues)"
                
                history_lines.append(f"### Step {s['step_id']}\n- Thought: {s['thinking']}\n- {tool_call_str}\n- {observation_str}")
            
            # 添加循环检测警告
            if analyze_tool_needs_count >= 3:
                history_lines.append("\n⚠️ **CRITICAL LOOP DETECTION**: You have called 'analyze_tool_needs' 3+ times! You MUST proceed to 'search_and_install_tools' immediately!")
            
            if last_recommended_action == 'search_for_new_tools' and search_and_install_count == 0:
                history_lines.append("\n🔍 **IMPORTANT**: Previous analysis recommended 'search_for_new_tools'. You MUST use 'search_and_install_tools' action next!")
            
            history_str = "\n".join(history_lines)
            prompt_parts.extend([
                "\n## History of Actions",
                "These are the steps you have already taken:",
                history_str
            ])

        # 5. 决策指导
        prompt_parts.extend([
            "\n## Decision Making Guidelines",
            "Before choosing your next action, consider:",
            "1. **Task Analysis**: What specific capabilities does this task require?",
            "2. **Tool Assessment**: Do current tools provide all needed functionality?",
            "3. **Gap Identification**: If tools are insufficient, what specific new tools are needed?",
            "4. **Strategic Choice**: Should you analyze tool needs first, search for tools, or proceed with existing tools?",
            "5. **History Review**: What have I already done? Am I repeating actions unnecessarily?",
            "",
            "**CRITICAL LOOP PREVENTION RULES:**",
            "- NEVER call 'analyze_tool_needs' more than 2 times for the same task",
            "- If previous step returned 'recommended_action': 'search_for_new_tools', you MUST use 'search_and_install_tools' next",
            "- If you've already analyzed and confirmed tool gaps, move directly to installation",
            "",
            "**When to use MCP Search Tool:**",
            "- If task requires capabilities not available in current tools (e.g., PDF generation, database access, image processing)",
            "- If previous attempts failed due to missing functionality (not configuration issues)",
            "- If you need to expand your toolset to handle complex or specialized tasks",
            "",
            "**When to use existing tools:**",
            "- If current tools can accomplish the task through proper usage or combination",
            "- If the issue is with parameters or approach, not missing functionality",
            "- If the task can be decomposed into steps using available tools"
        ])

        # 6. 指令与输出格式
        prompt_parts.extend([
            "\n## Step-by-Step Reasoning Process",
            "You MUST think through this systematically following these steps:",
            "",
            "**Step 1: Task Analysis**",
            "- What is the core task I need to accomplish?", 
            "- What specific capabilities does this task require?",
            "- Break down the task into key requirements (e.g., image generation, data processing, web interaction)",
            "",
            "**Step 2: Current Tool Assessment**", 
            "- Review each available tool and its capabilities",
            "- Can current tools handle all aspects of this task?",
            "- Identify specific capabilities that are missing",
            "",
            "**Step 3: Gap Analysis**",
            "- Are there clear gaps between task requirements and available tools?",
            "- Specifically for image generation tasks: Do I have image creation/generation tools?",
            "- For data processing: Do I have sufficient analysis tools?",
            "- For specialized tasks: Do I have domain-specific tools?",
            "",
            "**Step 4: MCP Search Tool Logic Flow**",
            "If tool gaps exist, follow this exact sequence:",
            "- FIRST: Use 'mcp-search-tool' with 'analyze_tool_needs' to assess requirements",
            "- THEN: If analysis confirms gaps, use 'mcp-search-tool' with 'search_and_install_tools'",
            "- FINALLY: After installation, proceed with the new tools",
            "",
            "**Step 5: Action Decision**",
            "- If you've already done analysis and confirmed gaps: Use 'search_and_install_tools'",
            "- If you haven't analyzed yet: Use 'analyze_tool_needs' first",
            "- If no gaps: Proceed with existing tools",
            "- Choose the most logical next step in the sequence",
            "",
            "## Your Response Format",
            "Your response MUST be a single, valid JSON object with detailed step-by-step reasoning:",
            '```json\n'
            '{\n'
            '  "thinking": "DETAILED STEP-BY-STEP ANALYSIS:\\n\\nStep 1 - Task Analysis:\\n[Analyze what this task requires]\\n\\nStep 2 - Tool Assessment:\\n[Review current tools and their capabilities]\\n\\nStep 3 - Gap Analysis:\\n[Identify missing capabilities]\\n\\nStep 4 - Action Decision:\\n[Explain chosen action with reasoning]",\n'
            '  "confidence": 0.0-1.0,\n'
            '  "tool_id": "REQUIRED: exact tool ID (e.g., \'mcp-search-tool\', \'python-executor-mcp-server\')",\n'
            '  "action": "REQUIRED: specific action name (e.g., \'analyze_tool_needs\', \'python_execute\')",\n'
            '  "parameters": {\n'
            '    "task_description": "copy the original task description exactly",\n'
            '    "current_available_tools": "list of current tools for MCP operations",\n'
            '    "reason": "why searching for new tools",\n'
            '    "code": "Python code to execute",\n'
            '    "url": "URL to navigate to"\n'
            '  }\n'
            '}\n'
            '```',
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",
            "CONDITION 1: Never analyzed before + task needs new tools → use 'analyze_tool_needs'",
            "CONDITION 2: Already analyzed + got 'search_for_new_tools' recommendation → use 'search_and_install_tools' IMMEDIATELY",
            "CONDITION 3: Analysis shows sufficient tools → proceed with existing tools",
            "CONDITION 4: Called 'analyze_tool_needs' 2+ times → MUST use 'search_and_install_tools' to break loop",
            "CONDITION 5: New tools successfully installed → proceed with task using new tools",
            "",
            "**DECISION TREE:**",
            "1. Check history: Have I called 'analyze_tool_needs' before?",
            "   - YES: Did previous analysis recommend 'search_for_new_tools'?",
            "     - YES → Use 'search_and_install_tools' (DO NOT analyze again)",
            "     - NO → Proceed with existing tools",
            "   - NO: Does task need capabilities I don't have?",
            "     - YES → Use 'analyze_tool_needs' (FIRST TIME ONLY)",
            "     - NO → Proceed with existing tools",
            "",
            "**Critical Guidelines:**",
            "- For image generation tasks WITHOUT image tools: Use 'mcp-search-tool' with 'analyze_tool_needs' FIRST",
            "- After analysis confirms gaps: Use 'mcp-search-tool' with 'search_and_install_tools' to find new tools",
            "- If you see 'recommended_action': 'search_for_new_tools' in previous results: Use 'search_and_install_tools'",
            "- Always include detailed step-by-step reasoning in the 'thinking' field",
            "- The tool_id and action fields are mandatory and must be exact matches",
            "",
            "**CRITICAL SEQUENCE LOGIC:**",