# Agent Data Platform 环境变量配置
# 复制此文件为 .env 并填入实际值

# ============================================
# API配置 (至少需要配置一个)
# ============================================

# Google Gemini API (推荐)
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta

# DeepSeek API (备用)
# DEEPSEEK_API_KEY=your_deepseek_api_key_here
# DEEPSEEK_API_URL=https://api.deepseek.com/v1

# OpenAI兼容API (备用)
# OPENAI_API_KEY=your_openai_api_key_here
# OPENAI_API_BASE=https://api.openai.com/v1

# ============================================
# MCP动态搜索和安装配置
# ============================================

# 启用MCP搜索功能
MCP_SEARCH_ENABLED=true

# 搜索超时时间(秒)
MCP_SEARCH_TIMEOUT=30

# 最大候选服务器数量
MCP_SEARCH_MAX_CANDIDATES=10

# 安全级别: low, medium, high
MCP_SECURITY_LEVEL=high

# 信任的作者列表(逗号分隔)
MCP_TRUSTED_AUTHORS=anthropic,microsoft,google,modelcontextprotocol

# Docker网络配置
DOCKER_NETWORK=agent-data-platform_agent_network

# 动态MCP服务器端口范围
DOCKER_PORT_RANGE=8100-8200

# ============================================
# GitHub API配置 (用于安全检查，可选)
# ============================================

# GitHub Personal Access Token (可选，提高API限制)
# GITHUB_TOKEN=your_github_token_here

# ============================================
# 其他配置
# ============================================

# Redis配置
REDIS_URL=redis://redis:6379

# ToolScore WebSocket配置
TOOLSCORE_URL=ws://toolscore:8080/websocket

# Python路径
PYTHONPATH=/app
PYTHONUNBUFFERED=1

# ============================================
# 使用说明
# ============================================

# 1. 复制此文件为 .env:
#    cp env.example .env
#
# 2. 填入你的API密钥:
#    - 至少配置一个AI API (推荐Gemini)
#    - GitHub Token是可选的，但推荐配置
#
# 3. 运行完整测试:
#    chmod +x scripts/test_mcp_complete.sh
#    ./scripts/test_mcp_complete.sh
#
# 4. 启动系统:
#    docker-compose up -d
#
# 5. 监控日志:
#    docker-compose logs -f enhanced-reasoning-runtime 